version: '3'

services:
  docker-registry-manager:
    container_name: 'docker_registry_manager'
    build: .
    hostname: manager
    networks: 
      - reseau_devops
    ports:
      - "8080:8080"
    depends_on:
      - awx_docker_registry
    volumes:
      - ./registries-test.yml:/app/registries.yml
      #- ./ssl.crt:/app/ssl.crt # https certfile location
      #- ./ssl.key:/app/ssl.key # https keyfile location
    environment:
      - MANAGER_PORT=8080
      - MANAGER_REGISTRIES=/app/registries.yml
      - MANAGER_LOG_LEVEL=warn
      #- MANAGER_ENABLE_HTTPS=true
      #- MANAGER_KEY=/app/ssl.crt
      #- MANAGER_CERTIFICATE=/app/ssl.key
  awx_docker_registry:
    container_name: 'awx_dock_registry'
    image: registry:2
    restart: always
    hostname: registry
    ports:
      - "5000:5000"
    volumes:
      - ./conf/config.yml:/etc/docker/registry/config.yml
      - ./.secrets/auth/:/auth/
      - ./.secrets/tls/:/certs
    environment:
      # Dixit https://docs.docker.com/registry/configuration/#delete
      # Use the 'delete' structure to enable the deletion of image blobs and manifests by digest.
      - REGISTRY_STORAGE_DELETE_ENABLED=true
      - REGISTRY_AUTH=htpasswd
      - REGISTRY_AUTH_HTPASSWD_REALM='Registry Realm'
      - REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt
      - REGISTRY_HTTP_TLS_KEY=/certs/domain.key
      - REGISTRY_HTTP_SECRET="your-http-secret"
    networks:
      - reseau_devops
  # https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./.secrets/tls/:/certs
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    environment:
      - path:$PEGASUS_CERTBOT_PATH_INSIDER
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - reseau_devops
networks:
  reseau_devops:
    driver: bridge
